import pyomo.environ as pyo
import numpy as np
import mpisppy.utils.sputils as sputils

# Use this random stream:
farmerstream = np.random.RandomState()

scenario_name = 'scen2' #['scen0', 'scen1', 'scen2']
print("Scenario name:", scenario_name)
scennum   = sputils.extract_num(scenario_name)
print("Scenario number:", scennum)
basenames = ['BelowAverageScenario', 'AverageScenario', 'AboveAverageScenario']
print("Base names:", basenames)
basenum   = scennum  % 3
print("Base number:", basenum)
groupnum  = scennum // 3
print("Group number:", groupnum)
scenname  = basenames[basenum]+str(groupnum)
print("Scenario name with number:", scenname)

scenario_name = scenname
print("Final scenario name:", scenario_name)
scengroupnum = sputils.extract_num(scenario_name)
print("Scenario group number:", scengroupnum)
scenario_base_name = scenario_name.rstrip("0123456789")
print("Scenario base name:", scenario_base_name)

model = pyo.ConcreteModel(scenario_name)
model.CROPS = pyo.Set(initialize=['WHEAT', 'CORN', 'SUGAR_BEETS'])
Yield = {}
Yield['BelowAverageScenario'] = {'WHEAT':2.0,'CORN':2.4,'SUGAR_BEETS':16.0}
Yield['AverageScenario'] = {'WHEAT':2.5,'CORN':3.0,'SUGAR_BEETS':20.0}
Yield['AboveAverageScenario'] = {'WHEAT':3.0,'CORN':3.6,'SUGAR_BEETS':24.0}
def Yield_init(m, cropname):
    # yield as in "crop yield"
    crop_base_name = cropname.rstrip("0123456789")
    if scengroupnum != 0:
        return Yield[scenario_base_name][crop_base_name]+farmerstream.rand()
    else:
        return Yield[scenario_base_name][crop_base_name]

model.Yield = pyo.Param(model.CROPS,
                        within=pyo.NonNegativeReals,
                        initialize=Yield_init,
                        mutable=True)

model.Yield.pprint()

